// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddAsset extends ethereum.Event {
  get params(): AddAsset__Params {
    return new AddAsset__Params(this);
  }
}

export class AddAsset__Params {
  _event: AddAsset;

  constructor(event: AddAsset) {
    this._event = event;
  }

  get newAsset(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get baseTokenAmountIn(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sharesMinted(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class HarvestManagementFees extends ethereum.Event {
  get params(): HarvestManagementFees__Params {
    return new HarvestManagementFees__Params(this);
  }
}

export class HarvestManagementFees__Params {
  _event: HarvestManagementFees;

  constructor(event: HarvestManagementFees) {
    this._event = event;
  }

  get amountToDAO(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amountToStrategist(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class HarvestPerformanceFees extends ethereum.Event {
  get params(): HarvestPerformanceFees__Params {
    return new HarvestPerformanceFees__Params(this);
  }
}

export class HarvestPerformanceFees__Params {
  _event: HarvestPerformanceFees;

  constructor(event: HarvestPerformanceFees) {
    this._event = event;
  }

  get amountToDAO(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amountToStrategist(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class PositionDecrease extends ethereum.Event {
  get params(): PositionDecrease__Params {
    return new PositionDecrease__Params(this);
  }
}

export class PositionDecrease__Params {
  _event: PositionDecrease;

  constructor(event: PositionDecrease) {
    this._event = event;
  }

  get path(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get tradedToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get collateralDelta(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get acceptablePrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class PositionIncrease extends ethereum.Event {
  get params(): PositionIncrease__Params {
    return new PositionIncrease__Params(this);
  }
}

export class PositionIncrease__Params {
  _event: PositionIncrease;

  constructor(event: PositionIncrease) {
    this._event = event;
  }

  get path(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get tradedToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amountIn(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get minOut(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }

  get acceptablePrice(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class Rebalance extends ethereum.Event {
  get params(): Rebalance__Params {
    return new Rebalance__Params(this);
  }
}

export class Rebalance__Params {
  _event: Rebalance;

  constructor(event: Rebalance) {
    this._event = event;
  }

  get currentSignals(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }

  get desiredSignals(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class Redeem extends ethereum.Event {
  get params(): Redeem__Params {
    return new Redeem__Params(this);
  }
}

export class Redeem__Params {
  _event: Redeem;

  constructor(event: Redeem) {
    this._event = event;
  }

  get amountReceived(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get shareBurned(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RedeemAsk extends ethereum.Event {
  get params(): RedeemAsk__Params {
    return new RedeemAsk__Params(this);
  }
}

export class RedeemAsk__Params {
  _event: RedeemAsk;

  constructor(event: RedeemAsk) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amountUSD(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RedeemExecuteFail extends ethereum.Event {
  get params(): RedeemExecuteFail__Params {
    return new RedeemExecuteFail__Params(this);
  }
}

export class RedeemExecuteFail__Params {
  _event: RedeemExecuteFail;

  constructor(event: RedeemExecuteFail) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amountUSD(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RedeemExecuted extends ethereum.Event {
  get params(): RedeemExecuted__Params {
    return new RedeemExecuted__Params(this);
  }
}

export class RedeemExecuted__Params {
  _event: RedeemExecuted;

  constructor(event: RedeemExecuted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amountUSD(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SetConfigProps extends ethereum.Event {
  get params(): SetConfigProps__Params {
    return new SetConfigProps__Params(this);
  }
}

export class SetConfigProps__Params {
  _event: SetConfigProps;

  constructor(event: SetConfigProps) {
    this._event = event;
  }

  get feesProps(): SetConfigPropsFeesPropsStruct {
    return changetype<SetConfigPropsFeesPropsStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }
}

export class SetConfigPropsFeesPropsStruct extends ethereum.Tuple {
  get paused(): boolean {
    return this[0].toBoolean();
  }

  get verified(): i32 {
    return this[1].toI32();
  }

  get name(): string {
    return this[2].toString();
  }

  get description(): string {
    return this[3].toString();
  }
}

export class SetFeesProps extends ethereum.Event {
  get params(): SetFeesProps__Params {
    return new SetFeesProps__Params(this);
  }
}

export class SetFeesProps__Params {
  _event: SetFeesProps;

  constructor(event: SetFeesProps) {
    this._event = event;
  }

  get feesProps(): SetFeesPropsFeesPropsStruct {
    return changetype<SetFeesPropsFeesPropsStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }
}

export class SetFeesPropsFeesPropsStruct extends ethereum.Tuple {
  get beneficiary(): Address {
    return this[0].toAddress();
  }

  get exitFees(): BigInt {
    return this[1].toBigInt();
  }

  get managementFeesRate(): BigInt {
    return this[2].toBigInt();
  }

  get managementFeesToStrategist(): BigInt {
    return this[3].toBigInt();
  }

  get performanceFeesRate(): BigInt {
    return this[4].toBigInt();
  }

  get performanceFeesToStrategist(): BigInt {
    return this[5].toBigInt();
  }
}

export class SetSecurityProps extends ethereum.Event {
  get params(): SetSecurityProps__Params {
    return new SetSecurityProps__Params(this);
  }
}

export class SetSecurityProps__Params {
  _event: SetSecurityProps;

  constructor(event: SetSecurityProps) {
    this._event = event;
  }

  get feesProps(): SetSecurityPropsFeesPropsStruct {
    return changetype<SetSecurityPropsFeesPropsStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }
}

export class SetSecurityPropsFeesPropsStruct extends ethereum.Tuple {
  get maxAUM(): BigInt {
    return this[0].toBigInt();
  }

  get maxLossSwap(): BigInt {
    return this[1].toBigInt();
  }

  get minAmountDeposit(): BigInt {
    return this[2].toBigInt();
  }

  get maxAmountDeposit(): BigInt {
    return this[3].toBigInt();
  }

  get minFrequencySwap(): BigInt {
    return this[4].toBigInt();
  }

  get minSecurityTime(): BigInt {
    return this[5].toBigInt();
  }

  get minHarvestThreshold(): BigInt {
    return this[6].toBigInt();
  }
}

export class SetShareTransferability extends ethereum.Event {
  get params(): SetShareTransferability__Params {
    return new SetShareTransferability__Params(this);
  }
}

export class SetShareTransferability__Params {
  _event: SetShareTransferability;

  constructor(event: SetShareTransferability) {
    this._event = event;
  }

  get status(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class TradingVault__baseTokenResult {
  value0: Address;
  value1: Address;
  value2: i32;
  value3: BigInt;

  constructor(value0: Address, value1: Address, value2: i32, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class TradingVault__getAllPositionsResultValue0Struct extends ethereum.Tuple {
  get size(): BigInt {
    return this[0].toBigInt();
  }

  get collateral(): BigInt {
    return this[1].toBigInt();
  }

  get averagePrice(): BigInt {
    return this[2].toBigInt();
  }

  get entryFundingRate(): BigInt {
    return this[3].toBigInt();
  }

  get reserveAmount(): BigInt {
    return this[4].toBigInt();
  }

  get realisedPnl(): BigInt {
    return this[5].toBigInt();
  }

  get hasProfit(): boolean {
    return this[6].toBoolean();
  }

  get lastIncreasedTime(): BigInt {
    return this[7].toBigInt();
  }
}

export class TradingVault__getConfigPropsResultValue0Struct extends ethereum.Tuple {
  get paused(): boolean {
    return this[0].toBoolean();
  }

  get verified(): i32 {
    return this[1].toI32();
  }

  get name(): string {
    return this[2].toString();
  }

  get description(): string {
    return this[3].toString();
  }
}

export class TradingVault__getConstantPropsResultValue0Struct extends ethereum.Tuple {
  get factory(): Address {
    return this[0].toAddress();
  }

  get createdAtBlockNumber(): BigInt {
    return this[1].toBigInt();
  }

  get share(): Address {
    return this[2].toAddress();
  }
}

export class TradingVault__getFeesPropsResultValue0Struct extends ethereum.Tuple {
  get beneficiary(): Address {
    return this[0].toAddress();
  }

  get exitFees(): BigInt {
    return this[1].toBigInt();
  }

  get managementFeesRate(): BigInt {
    return this[2].toBigInt();
  }

  get managementFeesToStrategist(): BigInt {
    return this[3].toBigInt();
  }

  get performanceFeesRate(): BigInt {
    return this[4].toBigInt();
  }

  get performanceFeesToStrategist(): BigInt {
    return this[5].toBigInt();
  }
}

export class TradingVault__getHistoryPropsResultValue0Struct extends ethereum.Tuple {
  get highWaterMark(): BigInt {
    return this[0].toBigInt();
  }

  get prevMngHarvest(): BigInt {
    return this[1].toBigInt();
  }
}

export class TradingVault__getManagementFeesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class TradingVault__getOnePositionFromAVaultResultValue0Struct extends ethereum.Tuple {
  get size(): BigInt {
    return this[0].toBigInt();
  }

  get collateral(): BigInt {
    return this[1].toBigInt();
  }

  get averagePrice(): BigInt {
    return this[2].toBigInt();
  }

  get entryFundingRate(): BigInt {
    return this[3].toBigInt();
  }

  get reserveAmount(): BigInt {
    return this[4].toBigInt();
  }

  get realisedPnl(): BigInt {
    return this[5].toBigInt();
  }

  get hasProfit(): boolean {
    return this[6].toBoolean();
  }

  get lastIncreasedTime(): BigInt {
    return this[7].toBigInt();
  }
}

export class TradingVault__getPerformanceFeesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class TradingVault__getSecurityPropsResultValue0Struct extends ethereum.Tuple {
  get maxAUM(): BigInt {
    return this[0].toBigInt();
  }

  get maxLossSwap(): BigInt {
    return this[1].toBigInt();
  }

  get minAmountDeposit(): BigInt {
    return this[2].toBigInt();
  }

  get maxAmountDeposit(): BigInt {
    return this[3].toBigInt();
  }

  get minFrequencySwap(): BigInt {
    return this[4].toBigInt();
  }

  get minSecurityTime(): BigInt {
    return this[5].toBigInt();
  }

  get minHarvestThreshold(): BigInt {
    return this[6].toBigInt();
  }
}

export class TradingVault__getVaultStatusResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class TradingVault__userRedeemAskResult {
  value0: BigInt;
  value1: BigInt;
  value2: boolean;

  constructor(value0: BigInt, value1: BigInt, value2: boolean) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    return map;
  }
}

export class TradingVault extends ethereum.SmartContract {
  static bind(address: Address): TradingVault {
    return new TradingVault("TradingVault", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  GMXVaultUtils(): Address {
    let result = super.call("GMXVaultUtils", "GMXVaultUtils():(address)", []);

    return result[0].toAddress();
  }

  try_GMXVaultUtils(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "GMXVaultUtils",
      "GMXVaultUtils():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  HARVESTER_ROLE(): Bytes {
    let result = super.call("HARVESTER_ROLE", "HARVESTER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_HARVESTER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "HARVESTER_ROLE",
      "HARVESTER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  STRATEGIST_ROLE(): Bytes {
    let result = super.call(
      "STRATEGIST_ROLE",
      "STRATEGIST_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_STRATEGIST_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "STRATEGIST_ROLE",
      "STRATEGIST_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  baseToken(): TradingVault__baseTokenResult {
    let result = super.call(
      "baseToken",
      "baseToken():(address,address,uint8,uint256)",
      []
    );

    return new TradingVault__baseTokenResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toI32(),
      result[3].toBigInt()
    );
  }

  try_baseToken(): ethereum.CallResult<TradingVault__baseTokenResult> {
    let result = super.tryCall(
      "baseToken",
      "baseToken():(address,address,uint8,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TradingVault__baseTokenResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toI32(),
        value[3].toBigInt()
      )
    );
  }

  getAllPositions(): Array<TradingVault__getAllPositionsResultValue0Struct> {
    let result = super.call(
      "getAllPositions",
      "getAllPositions():((uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)[])",
      []
    );

    return result[0].toTupleArray<
      TradingVault__getAllPositionsResultValue0Struct
    >();
  }

  try_getAllPositions(): ethereum.CallResult<
    Array<TradingVault__getAllPositionsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllPositions",
      "getAllPositions():((uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<TradingVault__getAllPositionsResultValue0Struct>()
    );
  }

  getConfigProps(): TradingVault__getConfigPropsResultValue0Struct {
    let result = super.call(
      "getConfigProps",
      "getConfigProps():((bool,uint8,string,string))",
      []
    );

    return changetype<TradingVault__getConfigPropsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getConfigProps(): ethereum.CallResult<
    TradingVault__getConfigPropsResultValue0Struct
  > {
    let result = super.tryCall(
      "getConfigProps",
      "getConfigProps():((bool,uint8,string,string))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<TradingVault__getConfigPropsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getConstantProps(): TradingVault__getConstantPropsResultValue0Struct {
    let result = super.call(
      "getConstantProps",
      "getConstantProps():((address,uint256,address))",
      []
    );

    return changetype<TradingVault__getConstantPropsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getConstantProps(): ethereum.CallResult<
    TradingVault__getConstantPropsResultValue0Struct
  > {
    let result = super.tryCall(
      "getConstantProps",
      "getConstantProps():((address,uint256,address))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<TradingVault__getConstantPropsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getFeesProps(): TradingVault__getFeesPropsResultValue0Struct {
    let result = super.call(
      "getFeesProps",
      "getFeesProps():((address,uint256,uint256,uint256,uint256,uint256))",
      []
    );

    return changetype<TradingVault__getFeesPropsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getFeesProps(): ethereum.CallResult<
    TradingVault__getFeesPropsResultValue0Struct
  > {
    let result = super.tryCall(
      "getFeesProps",
      "getFeesProps():((address,uint256,uint256,uint256,uint256,uint256))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<TradingVault__getFeesPropsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getHistoryProps(): TradingVault__getHistoryPropsResultValue0Struct {
    let result = super.call(
      "getHistoryProps",
      "getHistoryProps():((uint256,uint256))",
      []
    );

    return changetype<TradingVault__getHistoryPropsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getHistoryProps(): ethereum.CallResult<
    TradingVault__getHistoryPropsResultValue0Struct
  > {
    let result = super.tryCall(
      "getHistoryProps",
      "getHistoryProps():((uint256,uint256))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<TradingVault__getHistoryPropsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getLatestPrice(_priceFeed: Address): BigInt {
    let result = super.call(
      "getLatestPrice",
      "getLatestPrice(address):(uint256)",
      [ethereum.Value.fromAddress(_priceFeed)]
    );

    return result[0].toBigInt();
  }

  try_getLatestPrice(_priceFeed: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLatestPrice",
      "getLatestPrice(address):(uint256)",
      [ethereum.Value.fromAddress(_priceFeed)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getManagementFees(): TradingVault__getManagementFeesResult {
    let result = super.call(
      "getManagementFees",
      "getManagementFees():(uint256,uint256)",
      []
    );

    return new TradingVault__getManagementFeesResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getManagementFees(): ethereum.CallResult<
    TradingVault__getManagementFeesResult
  > {
    let result = super.tryCall(
      "getManagementFees",
      "getManagementFees():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TradingVault__getManagementFeesResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getOnePositionFromAVault(
    _collateralToken: Address,
    _indexToken: Address,
    _isLong: boolean
  ): TradingVault__getOnePositionFromAVaultResultValue0Struct {
    let result = super.call(
      "getOnePositionFromAVault",
      "getOnePositionFromAVault(address,address,bool):((uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256))",
      [
        ethereum.Value.fromAddress(_collateralToken),
        ethereum.Value.fromAddress(_indexToken),
        ethereum.Value.fromBoolean(_isLong)
      ]
    );

    return changetype<TradingVault__getOnePositionFromAVaultResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getOnePositionFromAVault(
    _collateralToken: Address,
    _indexToken: Address,
    _isLong: boolean
  ): ethereum.CallResult<
    TradingVault__getOnePositionFromAVaultResultValue0Struct
  > {
    let result = super.tryCall(
      "getOnePositionFromAVault",
      "getOnePositionFromAVault(address,address,bool):((uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256))",
      [
        ethereum.Value.fromAddress(_collateralToken),
        ethereum.Value.fromAddress(_indexToken),
        ethereum.Value.fromBoolean(_isLong)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<TradingVault__getOnePositionFromAVaultResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getPerformanceFees(): TradingVault__getPerformanceFeesResult {
    let result = super.call(
      "getPerformanceFees",
      "getPerformanceFees():(uint256,uint256)",
      []
    );

    return new TradingVault__getPerformanceFeesResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getPerformanceFees(): ethereum.CallResult<
    TradingVault__getPerformanceFeesResult
  > {
    let result = super.tryCall(
      "getPerformanceFees",
      "getPerformanceFees():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TradingVault__getPerformanceFeesResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSecurityProps(): TradingVault__getSecurityPropsResultValue0Struct {
    let result = super.call(
      "getSecurityProps",
      "getSecurityProps():((uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      []
    );

    return changetype<TradingVault__getSecurityPropsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getSecurityProps(): ethereum.CallResult<
    TradingVault__getSecurityPropsResultValue0Struct
  > {
    let result = super.tryCall(
      "getSecurityProps",
      "getSecurityProps():((uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<TradingVault__getSecurityPropsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getTVLGMX(): BigInt {
    let result = super.call("getTVLGMX", "getTVLGMX():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getTVLGMX(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getTVLGMX", "getTVLGMX():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getVaultStatus(): TradingVault__getVaultStatusResult {
    let result = super.call(
      "getVaultStatus",
      "getVaultStatus():(uint256,uint256)",
      []
    );

    return new TradingVault__getVaultStatusResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getVaultStatus(): ethereum.CallResult<
    TradingVault__getVaultStatusResult
  > {
    let result = super.tryCall(
      "getVaultStatus",
      "getVaultStatus():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TradingVault__getVaultStatusResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lastTimeIncreasedPosition(): BigInt {
    let result = super.call(
      "lastTimeIncreasedPosition",
      "lastTimeIncreasedPosition():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_lastTimeIncreasedPosition(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastTimeIncreasedPosition",
      "lastTimeIncreasedPosition():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  positionRouter(): Address {
    let result = super.call("positionRouter", "positionRouter():(address)", []);

    return result[0].toAddress();
  }

  try_positionRouter(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "positionRouter",
      "positionRouter():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  redeemExecute(): boolean {
    let result = super.call("redeemExecute", "redeemExecute():(bool)", []);

    return result[0].toBoolean();
  }

  try_redeemExecute(): ethereum.CallResult<boolean> {
    let result = super.tryCall("redeemExecute", "redeemExecute():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  router(): Address {
    let result = super.call("router", "router():(address)", []);

    return result[0].toAddress();
  }

  try_router(): ethereum.CallResult<Address> {
    let result = super.tryCall("router", "router():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tradedToken(): Address {
    let result = super.call("tradedToken", "tradedToken():(address)", []);

    return result[0].toAddress();
  }

  try_tradedToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("tradedToken", "tradedToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  userRedeemAsk(param0: Address): TradingVault__userRedeemAskResult {
    let result = super.call(
      "userRedeemAsk",
      "userRedeemAsk(address):(uint256,uint256,bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new TradingVault__userRedeemAskResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBoolean()
    );
  }

  try_userRedeemAsk(
    param0: Address
  ): ethereum.CallResult<TradingVault__userRedeemAskResult> {
    let result = super.tryCall(
      "userRedeemAsk",
      "userRedeemAsk(address):(uint256,uint256,bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TradingVault__userRedeemAskResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBoolean()
      )
    );
  }

  vaultAddressGMX(): Address {
    let result = super.call(
      "vaultAddressGMX",
      "vaultAddressGMX():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_vaultAddressGMX(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "vaultAddressGMX",
      "vaultAddressGMX():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ApproveForSwapCall extends ethereum.Call {
  get inputs(): ApproveForSwapCall__Inputs {
    return new ApproveForSwapCall__Inputs(this);
  }

  get outputs(): ApproveForSwapCall__Outputs {
    return new ApproveForSwapCall__Outputs(this);
  }
}

export class ApproveForSwapCall__Inputs {
  _call: ApproveForSwapCall;

  constructor(call: ApproveForSwapCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ApproveForSwapCall__Outputs {
  _call: ApproveForSwapCall;

  constructor(call: ApproveForSwapCall) {
    this._call = call;
  }
}

export class DecreasePositionCall extends ethereum.Call {
  get inputs(): DecreasePositionCall__Inputs {
    return new DecreasePositionCall__Inputs(this);
  }

  get outputs(): DecreasePositionCall__Outputs {
    return new DecreasePositionCall__Outputs(this);
  }
}

export class DecreasePositionCall__Inputs {
  _call: DecreasePositionCall;

  constructor(call: DecreasePositionCall) {
    this._call = call;
  }

  get _path(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _collateralDelta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _sizeDelta(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _isLong(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get _acceptablePrice(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _withdrawETH(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }
}

export class DecreasePositionCall__Outputs {
  _call: DecreasePositionCall;

  constructor(call: DecreasePositionCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _baseTokenAmountIn(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class HarvestManagementFeesCall extends ethereum.Call {
  get inputs(): HarvestManagementFeesCall__Inputs {
    return new HarvestManagementFeesCall__Inputs(this);
  }

  get outputs(): HarvestManagementFeesCall__Outputs {
    return new HarvestManagementFeesCall__Outputs(this);
  }
}

export class HarvestManagementFeesCall__Inputs {
  _call: HarvestManagementFeesCall;

  constructor(call: HarvestManagementFeesCall) {
    this._call = call;
  }
}

export class HarvestManagementFeesCall__Outputs {
  _call: HarvestManagementFeesCall;

  constructor(call: HarvestManagementFeesCall) {
    this._call = call;
  }
}

export class HarvestPerformanceFeesCall extends ethereum.Call {
  get inputs(): HarvestPerformanceFeesCall__Inputs {
    return new HarvestPerformanceFeesCall__Inputs(this);
  }

  get outputs(): HarvestPerformanceFeesCall__Outputs {
    return new HarvestPerformanceFeesCall__Outputs(this);
  }
}

export class HarvestPerformanceFeesCall__Inputs {
  _call: HarvestPerformanceFeesCall;

  constructor(call: HarvestPerformanceFeesCall) {
    this._call = call;
  }
}

export class HarvestPerformanceFeesCall__Outputs {
  _call: HarvestPerformanceFeesCall;

  constructor(call: HarvestPerformanceFeesCall) {
    this._call = call;
  }
}

export class IncreasePositionCall extends ethereum.Call {
  get inputs(): IncreasePositionCall__Inputs {
    return new IncreasePositionCall__Inputs(this);
  }

  get outputs(): IncreasePositionCall__Outputs {
    return new IncreasePositionCall__Outputs(this);
  }
}

export class IncreasePositionCall__Inputs {
  _call: IncreasePositionCall;

  constructor(call: IncreasePositionCall) {
    this._call = call;
  }

  get _path(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _amountIn(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _minOut(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _sizeDelta(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _isLong(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get _acceptablePrice(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class IncreasePositionCall__Outputs {
  _call: IncreasePositionCall;

  constructor(call: IncreasePositionCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _tokensAddresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _creationProps(): InitializeCall_creationPropsStruct {
    return changetype<InitializeCall_creationPropsStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get _feesProps(): InitializeCall_feesPropsStruct {
    return changetype<InitializeCall_feesPropsStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get _securityProps(): InitializeCall_securityPropsStruct {
    return changetype<InitializeCall_securityPropsStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall_creationPropsStruct extends ethereum.Tuple {
  get vaultName(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get shareName(): string {
    return this[2].toString();
  }

  get shareSymbol(): string {
    return this[3].toString();
  }

  get strategist(): Address {
    return this[4].toAddress();
  }
}

export class InitializeCall_feesPropsStruct extends ethereum.Tuple {
  get beneficiary(): Address {
    return this[0].toAddress();
  }

  get exitFees(): BigInt {
    return this[1].toBigInt();
  }

  get managementFeesRate(): BigInt {
    return this[2].toBigInt();
  }

  get managementFeesToStrategist(): BigInt {
    return this[3].toBigInt();
  }

  get performanceFeesRate(): BigInt {
    return this[4].toBigInt();
  }

  get performanceFeesToStrategist(): BigInt {
    return this[5].toBigInt();
  }
}

export class InitializeCall_securityPropsStruct extends ethereum.Tuple {
  get maxAUM(): BigInt {
    return this[0].toBigInt();
  }

  get maxLossSwap(): BigInt {
    return this[1].toBigInt();
  }

  get minAmountDeposit(): BigInt {
    return this[2].toBigInt();
  }

  get maxAmountDeposit(): BigInt {
    return this[3].toBigInt();
  }

  get minFrequencySwap(): BigInt {
    return this[4].toBigInt();
  }

  get minSecurityTime(): BigInt {
    return this[5].toBigInt();
  }

  get minHarvestThreshold(): BigInt {
    return this[6].toBigInt();
  }
}

export class RedeemExecuteCall extends ethereum.Call {
  get inputs(): RedeemExecuteCall__Inputs {
    return new RedeemExecuteCall__Inputs(this);
  }

  get outputs(): RedeemExecuteCall__Outputs {
    return new RedeemExecuteCall__Outputs(this);
  }
}

export class RedeemExecuteCall__Inputs {
  _call: RedeemExecuteCall;

  constructor(call: RedeemExecuteCall) {
    this._call = call;
  }
}

export class RedeemExecuteCall__Outputs {
  _call: RedeemExecuteCall;

  constructor(call: RedeemExecuteCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetConfigPropsCall extends ethereum.Call {
  get inputs(): SetConfigPropsCall__Inputs {
    return new SetConfigPropsCall__Inputs(this);
  }

  get outputs(): SetConfigPropsCall__Outputs {
    return new SetConfigPropsCall__Outputs(this);
  }
}

export class SetConfigPropsCall__Inputs {
  _call: SetConfigPropsCall;

  constructor(call: SetConfigPropsCall) {
    this._call = call;
  }

  get _configProps(): SetConfigPropsCall_configPropsStruct {
    return changetype<SetConfigPropsCall_configPropsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetConfigPropsCall__Outputs {
  _call: SetConfigPropsCall;

  constructor(call: SetConfigPropsCall) {
    this._call = call;
  }
}

export class SetConfigPropsCall_configPropsStruct extends ethereum.Tuple {
  get paused(): boolean {
    return this[0].toBoolean();
  }

  get verified(): i32 {
    return this[1].toI32();
  }

  get name(): string {
    return this[2].toString();
  }

  get description(): string {
    return this[3].toString();
  }
}

export class SetFeesPropsCall extends ethereum.Call {
  get inputs(): SetFeesPropsCall__Inputs {
    return new SetFeesPropsCall__Inputs(this);
  }

  get outputs(): SetFeesPropsCall__Outputs {
    return new SetFeesPropsCall__Outputs(this);
  }
}

export class SetFeesPropsCall__Inputs {
  _call: SetFeesPropsCall;

  constructor(call: SetFeesPropsCall) {
    this._call = call;
  }

  get _feesProps(): SetFeesPropsCall_feesPropsStruct {
    return changetype<SetFeesPropsCall_feesPropsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetFeesPropsCall__Outputs {
  _call: SetFeesPropsCall;

  constructor(call: SetFeesPropsCall) {
    this._call = call;
  }
}

export class SetFeesPropsCall_feesPropsStruct extends ethereum.Tuple {
  get beneficiary(): Address {
    return this[0].toAddress();
  }

  get exitFees(): BigInt {
    return this[1].toBigInt();
  }

  get managementFeesRate(): BigInt {
    return this[2].toBigInt();
  }

  get managementFeesToStrategist(): BigInt {
    return this[3].toBigInt();
  }

  get performanceFeesRate(): BigInt {
    return this[4].toBigInt();
  }

  get performanceFeesToStrategist(): BigInt {
    return this[5].toBigInt();
  }
}

export class SetPositionRouterGMXCall extends ethereum.Call {
  get inputs(): SetPositionRouterGMXCall__Inputs {
    return new SetPositionRouterGMXCall__Inputs(this);
  }

  get outputs(): SetPositionRouterGMXCall__Outputs {
    return new SetPositionRouterGMXCall__Outputs(this);
  }
}

export class SetPositionRouterGMXCall__Inputs {
  _call: SetPositionRouterGMXCall;

  constructor(call: SetPositionRouterGMXCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPositionRouterGMXCall__Outputs {
  _call: SetPositionRouterGMXCall;

  constructor(call: SetPositionRouterGMXCall) {
    this._call = call;
  }
}

export class SetRouterGMXCall extends ethereum.Call {
  get inputs(): SetRouterGMXCall__Inputs {
    return new SetRouterGMXCall__Inputs(this);
  }

  get outputs(): SetRouterGMXCall__Outputs {
    return new SetRouterGMXCall__Outputs(this);
  }
}

export class SetRouterGMXCall__Inputs {
  _call: SetRouterGMXCall;

  constructor(call: SetRouterGMXCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRouterGMXCall__Outputs {
  _call: SetRouterGMXCall;

  constructor(call: SetRouterGMXCall) {
    this._call = call;
  }
}

export class SetSecurityPropsCall extends ethereum.Call {
  get inputs(): SetSecurityPropsCall__Inputs {
    return new SetSecurityPropsCall__Inputs(this);
  }

  get outputs(): SetSecurityPropsCall__Outputs {
    return new SetSecurityPropsCall__Outputs(this);
  }
}

export class SetSecurityPropsCall__Inputs {
  _call: SetSecurityPropsCall;

  constructor(call: SetSecurityPropsCall) {
    this._call = call;
  }

  get _securityProps(): SetSecurityPropsCall_securityPropsStruct {
    return changetype<SetSecurityPropsCall_securityPropsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetSecurityPropsCall__Outputs {
  _call: SetSecurityPropsCall;

  constructor(call: SetSecurityPropsCall) {
    this._call = call;
  }
}

export class SetSecurityPropsCall_securityPropsStruct extends ethereum.Tuple {
  get maxAUM(): BigInt {
    return this[0].toBigInt();
  }

  get maxLossSwap(): BigInt {
    return this[1].toBigInt();
  }

  get minAmountDeposit(): BigInt {
    return this[2].toBigInt();
  }

  get maxAmountDeposit(): BigInt {
    return this[3].toBigInt();
  }

  get minFrequencySwap(): BigInt {
    return this[4].toBigInt();
  }

  get minSecurityTime(): BigInt {
    return this[5].toBigInt();
  }

  get minHarvestThreshold(): BigInt {
    return this[6].toBigInt();
  }
}

export class SetShareTransferabilityCall extends ethereum.Call {
  get inputs(): SetShareTransferabilityCall__Inputs {
    return new SetShareTransferabilityCall__Inputs(this);
  }

  get outputs(): SetShareTransferabilityCall__Outputs {
    return new SetShareTransferabilityCall__Outputs(this);
  }
}

export class SetShareTransferabilityCall__Inputs {
  _call: SetShareTransferabilityCall;

  constructor(call: SetShareTransferabilityCall) {
    this._call = call;
  }

  get _status(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetShareTransferabilityCall__Outputs {
  _call: SetShareTransferabilityCall;

  constructor(call: SetShareTransferabilityCall) {
    this._call = call;
  }
}

export class SetVaultGMXCall extends ethereum.Call {
  get inputs(): SetVaultGMXCall__Inputs {
    return new SetVaultGMXCall__Inputs(this);
  }

  get outputs(): SetVaultGMXCall__Outputs {
    return new SetVaultGMXCall__Outputs(this);
  }
}

export class SetVaultGMXCall__Inputs {
  _call: SetVaultGMXCall;

  constructor(call: SetVaultGMXCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetVaultGMXCall__Outputs {
  _call: SetVaultGMXCall;

  constructor(call: SetVaultGMXCall) {
    this._call = call;
  }
}
